<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zml.nekopara.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="Article" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="pageView" property="pageView" jdbcType="INTEGER" />
    <result column="editorId" property="editorId" jdbcType="BIGINT" />
    <result column="createTime" property="createTime"  />
    <result column="publishTime" property="publishTime" />
    <result column="authorName" property="authorName" />
    <result column="source" property="source" />
    <result column="sourceUrl" property="sourceUrl" />
    <result column="isTop" property="isTop" />
    <association property="systemMenu" javaType="SystemMenu" column="systemMenuId" select="com.user5u.myweb.mapper.SystemMenuMapper.selectByPrimaryKey"></association>
    
  </resultMap>
  <resultMap id="ArticleTagResultMap"  type="Article" extends="BaseResultMap">
  	<collection property="tagList" columnPrefix="t_" ofType="Tag">
    	<result column="id" property="id"/>
    	<result column="tagname" property="tagname"/>
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" >
    insert into article (title, content, pageView, image,intro ,editorId,systemMenuId,createTime,publishTime,isTop,authorName,source,sourceUrl)
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},#{pageView},#{image,jdbcType=VARCHAR},#{intro,jdbcType=VARCHAR}, 
      #{editorId,jdbcType=BIGINT},#{systemMenu.id,jdbcType=BIGINT},#{createTime},#{publishTime},#{isTop},#{authorName},#{source},#{sourceUrl})
  </insert>
  
  <insert id="saveRelation" >
  	insert into article_tag (articleid,tagid)
  	values(#{articleid},#{tagid})
  </insert>
  <delete id="deleteRelation">
  	delete from article_tag
  	where articleid=#{articleid}
  </delete>
  
  <update id="updateByPrimaryKey" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      pageView = #{pageView,jdbcType=INTEGER},
      editorId = #{editorId,jdbcType=BIGINT},
      systemMenuId = #{systemMenu.id,jdbcType=BIGINT},
      createTime = #{createTime},
      publishTime = #{publishTime},
      authorName = #{authorName},
      source = #{source},
      sourceUrl = #{sourceUrl},
      isTop = #{isTop}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="ArticleTagResultMap"  >
    select a.id, a.title, a.content,a.image,a.intro, a.pageView, a.editorId,a.systemMenuId,a.createTime,a.publishTime,a.isTop,a.authorName,a.source,a.sourceUrl,
    t.id as t_id,t.tagname as t_tagname
    from article a left join article_tag at on a.id=at.articleid left join tag t on at.tagid=t.id
    where a.id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- 高级查询where子句 -->
  <sql id="baseWhere">
  	<where>
  		<if test="systemMenuId!=null">
  			and systemMenuId=#{systemMenuId}
  		</if>
  		<if test="keywords!=null">
  			and title like concat('%',#{keywords},'%')
  		</if>
  		<if test="beginDate!=null">
  			and publishTime &gt; #{beginDate}
  		</if>
  		<if test="endDate!=null">
  			and publishTime &lt; #{endDate}
  		</if>
  		<if test="isTop!=null">
  			and isTop=#{isTop}
  		</if>
  	</where>
  		<if test="orderBy!=null">
  			order by ${orderBy}
  		</if>
  		<if test="orderBy!=null and orderType!=null">
  			${orderType}
  		</if>
  </sql>
  <select id="queryForCount" resultType="int">
  	select count(id)
  	from article
  	<include refid="baseWhere"></include> 
  </select>
  <select id="queryForCondition" resultMap="BaseResultMap">
  	select id, title, content,image,intro,pageView, editorId,systemMenuId,createTime,publishTime,isTop,authorName,source,sourceUrl
  	from article
  	<include refid="baseWhere"></include> 
  	limit #{start},#{pageSize}
  </select>
  <select id="getBeforeArticle" resultMap="BaseResultMap">
  	select id, title, content,image,intro,pageView, editorId,systemMenuId,createTime,publishTime,isTop,authorName,source,sourceUrl
  	from article
  	where id&lt;#{id}
  	order by id desc
  	limit 0,1
  	
  </select>
  <select id="getNextArticle" resultMap="BaseResultMap">
  	select id, title, content,image,intro,pageView, editorId,systemMenuId,createTime,publishTime,isTop,authorName,source,sourceUrl
  	from article
  	where id&gt;#{id}
  	limit 0,1
  </select>
  <sql id="articleSql">
  	<where>
  		systemMenuId is not null
  	<if test="id!=0 and id!=null">
  		and systemMenuId=#{id}
  	</if>
  	</where>
  </sql>
  <select id="getHotArticle" resultMap="BaseResultMap">
  	select id, title, content,image,intro,pageView, editorId,systemMenuId,createTime,publishTime,isTop,authorName,source,sourceUrl
  	from article
  	<include refid="articleSql"></include>
  	order by pageView desc
  	limit 0,#{num}
  </select>
  <select id="getNewArticle" resultMap="BaseResultMap">
  	select id, title, content,image,intro,pageView, editorId,systemMenuId,createTime,publishTime,isTop,authorName,source,sourceUrl
  	from article
  	<include refid="articleSql"></include>
  	order by publishTime desc
  	limit 0,#{num}
  </select>
  
  <select id="getTopArticle" resultMap="BaseResultMap">
  select id, title, content,image,intro,pageView, editorId,systemMenuId,createTime,publishTime,isTop,authorName,source,sourceUrl
  	from article
  	where isTop=1 and systemMenuId is not null
  	<if test="id!=null and id!=0">and systemMenuId=#{id} </if> 
  	order by publishTime desc
  	limit 0,#{num}
  </select>
  
  <!-- 通过标签查询文章 -->
  <select id="selectCountByTag" resultType="int">
  	select count(tagid)
  	from article_tag
  	where tagid=#{tagid}
  </select>
  
  <select id="selectArticleByTag" resultMap="ArticleTagResultMap">
  select a.id, a.title, a.content,a.image,a.intro, a.pageView, a.editorId,a.systemMenuId,a.createTime,a.publishTime,a.isTop,a.authorName,a.source,a.sourceUrl,
    t.id as t_id,t.tagname as t_tagname
  from article a left join article_tag at on a.id=at.articleid left join tag t on at.tagid=t.id
  where t.id=#{tagid}
  limit #{start},#{pageSize}
  </select>
</mapper>